---

- name: Ensure depdency is installed (Ubuntu).
  apt:
    name: apt-transport-https
    state: present

- name: Add Elasticsearch apt key.
  apt_key:
    url: "{{ es_apt_key }}"
    state: present

- name: Add Kibana repository.
  apt_repository:
    repo: "{{ es_apt_url }}"
    state: present
    update_cache: yes

- name: Install Kibana
  apt:
    name: kibana{% if kibana_version is defined and kibana_version != "" %}={{ kibana_version }}{% endif %} 
    state: present
    allow_unauthenticated: "{{ 'no' if es_apt_key else 'yes' }}"
    cache_valid_time: 86400

# remove default files

- name: Delete Default Install Files
  file: path={{ item }} state=absent
  with_items:
    - "/etc/systemd/system/kibana.service"
    - "/etc/init.d/kibana"
    - "/etc/kibana/kibana.yml"

- name: Create Directories
  file: path={{ item }} state=directory recurse=yes
  with_items:
    - "{{kibana_conf_dir}}"
    - "{{kibana_log_dir}}"
    - "{{kibana_data_dir}}"
    - "{{kibana_pid_dir}}"
    - "{{kibana_home_dir}}"

- name: Delete Default Sysconfig File
  file: dest="/etc/systemd/system/kibana.service" state=absent

- name: Delete Default Configuration File
  file: dest="{{kibana_conf_file}}" state=absent

- name: Copy Kibana configuration.
  template:
    src: kibana.yml.j2
    dest: "{{kibana_conf_file}}"
    mode: 0644

- name: Change ownership
  file: path={{ item }} state=directory recurse=yes owner={{ kibana_user }} group={{ kibana_group }}
  with_items:
    - "{{kibana_conf_dir}}"
    - "{{kibana_log_dir}}"
    - "{{kibana_data_dir}}"
    - "{{kibana_pid_dir}}"
    - "{{kibana_home_dir}}"
  when: (kibana_group is defined) and (kibana_user is defined)

#Copy the systemd specific files

- name: Copy environment file that can be used by kibana.service
  template: src=systemd/kibana.environment.j2 dest={{kibana_environment}} mode=0644 force=yes

- name: Copy Systemd File for Instance
  template: src=systemd/kibana.service.j2 dest={{kibana_service}} mode=0644 force=yes

